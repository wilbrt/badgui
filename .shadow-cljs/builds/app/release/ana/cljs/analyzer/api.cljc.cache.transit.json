["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer.api');\r\n/**\r\n * Creates an empty compilation state Atom<Map>. The optional opts arg is a map\r\n * representing the compiler configuration. See the documentation\r\n * for details: https://clojurescript.org/reference/compiler-options\r\n */\r\ncljs.analyzer.api.empty_state = (function cljs$analyzer$api$empty_state(var_args){\r\nvar G__14896 = arguments.length;\r\nswitch (G__14896) {\r\ncase 0:\r\nreturn cljs.analyzer.api.empty_state.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.analyzer.api.empty_state.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.empty_state.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nif((!((cljs.env._STAR_compiler_STAR_ == null)))){\r\nreturn cljs.env._STAR_compiler_STAR_;\r\n} else {\r\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();\r\n}\r\n}));\r\n\r\n(cljs.analyzer.api.empty_state.cljs$core$IFn$_invoke$arity$1 = (function (opts){\r\nreturn cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(opts);\r\n}));\r\n\r\n(cljs.analyzer.api.empty_state.cljs$lang$maxFixedArity = 1);\r\n\r\n/**\r\n * Return the current compiler state atom.\r\n */\r\ncljs.analyzer.api.current_state = (function cljs$analyzer$api$current_state(){\r\nreturn cljs.env._STAR_compiler_STAR_;\r\n});\r\n/**\r\n * Return the current file under analysis or compilation.\r\n */\r\ncljs.analyzer.api.current_file = (function cljs$analyzer$api$current_file(){\r\nreturn cljs.analyzer._STAR_cljs_file_STAR_;\r\n});\r\n/**\r\n * Return the current ns under analysis or compilation.\r\n */\r\ncljs.analyzer.api.current_ns = (function cljs$analyzer$api$current_ns(){\r\nreturn cljs.analyzer._STAR_cljs_ns_STAR_;\r\n});\r\n/**\r\n * Creates an empty analysis environment.\r\n */\r\ncljs.analyzer.api.empty_env = (function cljs$analyzer$api$empty_env(){\r\nreturn cljs.analyzer.empty_env();\r\n});\r\n/**\r\n * Test if the given warning-type is enabled.\r\n */\r\ncljs.analyzer.api.warning_enabled_QMARK_ = (function cljs$analyzer$api$warning_enabled_QMARK_(warning_type){\r\nreturn cljs.analyzer._STAR_cljs_warnings_STAR_.call(null,warning_type);\r\n});\r\n/**\r\n * The default warning handler.\r\n * \r\n * Outputs the warning messages to *err*.\r\n */\r\ncljs.analyzer.api.default_warning_handler = (function cljs$analyzer$api$default_warning_handler(warning_type,env,extra){\r\nreturn cljs.analyzer.default_warning_handler(warning_type,env,extra);\r\n});\r\n/**\r\n * Helper for generating the standard analyzer messages for warnings. Should be\r\n *   passed warn-type and warn-info. See with-warning-handlers.\r\n */\r\ncljs.analyzer.api.warning_message = (function cljs$analyzer$api$warning_message(warn_type,warn_info){\r\nreturn cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warn_type,warn_info);\r\n});\r\n/**\r\n * Get the enabled warning types.\r\n */\r\ncljs.analyzer.api.enabled_warnings = (function cljs$analyzer$api$enabled_warnings(){\r\nreturn cljs.analyzer._STAR_cljs_warnings_STAR_;\r\n});\r\n/**\r\n * Return the compiler options from compiler state.\r\n */\r\ncljs.analyzer.api.get_options = (function cljs$analyzer$api$get_options(var_args){\r\nvar G__14913 = arguments.length;\r\nswitch (G__14913) {\r\ncase 0:\r\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.api.current_state());\r\n}));\r\n\r\n(cljs.analyzer.api.get_options.cljs$core$IFn$_invoke$arity$1 = (function (state){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(null,\"options\",\"options\",99638489));\r\n}));\r\n\r\n(cljs.analyzer.api.get_options.cljs$lang$maxFixedArity = 1);\r\n\r\n/**\r\n * Return the currently computed Google Closure js dependency index from the\r\n *   compiler state.\r\n */\r\ncljs.analyzer.api.get_js_index = (function cljs$analyzer$api$get_js_index(var_args){\r\nvar G__14915 = arguments.length;\r\nswitch (G__14915) {\r\ncase 0:\r\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.api.current_state());\r\n}));\r\n\r\n(cljs.analyzer.api.get_js_index.cljs$core$IFn$_invoke$arity$1 = (function (state){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131));\r\n}));\r\n\r\n(cljs.analyzer.api.get_js_index.cljs$lang$maxFixedArity = 1);\r\n\r\n/**\r\n * ClojureScript's default analysis passes.\r\n */\r\ncljs.analyzer.api.default_passes = cljs.analyzer.default_passes;\r\n/**\r\n * Given an analysis environment resolve a var. Analogous to\r\n * clojure.core/resolve\r\n */\r\ncljs.analyzer.api.resolve = (function cljs$analyzer$api$resolve(env,sym){\r\n\r\n\r\ntry{var _STAR_private_var_access_nowarn_STAR__orig_val__14921 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\r\nvar _STAR_private_var_access_nowarn_STAR__temp_val__14922 = true;\r\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__14922);\r\n\r\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists_throw());\r\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__14921);\r\n}}catch (e14920){var e = e14920;\r\nreturn cljs.analyzer.resolve_macro_var(env,sym);\r\n}});\r\n/**\r\n * Return all namespaces. Analagous to clojure.core/all-ns but\r\n *   returns symbols identifying namespaces not Namespace instances.\r\n */\r\ncljs.analyzer.api.all_ns = (function cljs$analyzer$api$all_ns(var_args){\r\nvar G__14924 = arguments.length;\r\nswitch (G__14924) {\r\ncase 0:\r\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0();\r\n\r\nbreak;\r\ncase 1:\r\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$0 = (function (){\r\nreturn cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_);\r\n}));\r\n\r\n(cljs.analyzer.api.all_ns.cljs$core$IFn$_invoke$arity$1 = (function (state){\r\nreturn cljs.core.keys(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)));\r\n}));\r\n\r\n(cljs.analyzer.api.all_ns.cljs$lang$maxFixedArity = 1);\r\n\r\n/**\r\n * Given a namespace return the corresponding namespace analysis map. Analagous\r\n *   to clojure.core/find-ns.\r\n */\r\ncljs.analyzer.api.find_ns = (function cljs$analyzer$api$find_ns(var_args){\r\nvar G__14928 = arguments.length;\r\nswitch (G__14928) {\r\ncase 1:\r\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$1 = (function (sym){\r\nreturn cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,sym);\r\n}));\r\n\r\n(cljs.analyzer.api.find_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,sym){\r\n\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),sym], null));\r\n}));\r\n\r\n(cljs.analyzer.api.find_ns.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Given a namespace return all the var analysis maps. Analagous to\r\n *   clojure.core/ns-interns but returns var analysis maps not vars.\r\n */\r\ncljs.analyzer.api.ns_interns = (function cljs$analyzer$api$ns_interns(var_args){\r\nvar G__14936 = arguments.length;\r\nswitch (G__14936) {\r\ncase 1:\r\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\r\nreturn cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\r\n}));\r\n\r\n(cljs.analyzer.api.ns_interns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\r\n\r\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0));\r\n}));\r\n\r\n(cljs.analyzer.api.ns_interns.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Given a namespace return all the public var analysis maps. Analagous to\r\n *   clojure.core/ns-publics but returns var analysis maps not vars.\r\n */\r\ncljs.analyzer.api.ns_publics = (function cljs$analyzer$api$ns_publics(var_args){\r\nvar G__14946 = arguments.length;\r\nswitch (G__14946) {\r\ncase 1:\r\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$1 = (function (ns){\r\nreturn cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\r\n}));\r\n\r\n(cljs.analyzer.api.ns_publics.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\r\n\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__14951){\r\nvar vec__14952 = p__14951;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14952,(0),null);\r\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14952,(1),null);\r\nreturn new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(v);\r\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null)),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null))], 0))));\r\n}));\r\n\r\n(cljs.analyzer.api.ns_publics.cljs$lang$maxFixedArity = 2);\r\n\r\n/**\r\n * Given a namespace and a symbol return the corresponding var analysis map.\r\n *   Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\r\n */\r\ncljs.analyzer.api.ns_resolve = (function cljs$analyzer$api$ns_resolve(var_args){\r\nvar G__14962 = arguments.length;\r\nswitch (G__14962) {\r\ncase 2:\r\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$2 = (function (ns,sym){\r\nreturn cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3(cljs.env._STAR_compiler_STAR_,ns,sym);\r\n}));\r\n\r\n(cljs.analyzer.api.ns_resolve.cljs$core$IFn$_invoke$arity$3 = (function (state,ns,sym){\r\n\r\n\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(state),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\r\n}));\r\n\r\n(cljs.analyzer.api.ns_resolve.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Removes the namespace named by the symbol.\r\n */\r\ncljs.analyzer.api.remove_ns = (function cljs$analyzer$api$remove_ns(var_args){\r\nvar G__14964 = arguments.length;\r\nswitch (G__14964) {\r\ncase 1:\r\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ncase 2:\r\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$1 = (function (ns){\r\nreturn cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,ns);\r\n}));\r\n\r\n(cljs.analyzer.api.remove_ns.cljs$core$IFn$_invoke$arity$2 = (function (state,ns){\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927)], null),cljs.core.dissoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns], 0));\r\n}));\r\n\r\n(cljs.analyzer.api.remove_ns.cljs$lang$maxFixedArity = 2);\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.analyzer","^Z","~$ana","^Z","~$cljs.env","^10","~$env","^10","~$cljs.core","^12","~$goog","^13"],"~:seen",["^K",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^12","^12"],"~:form",["~#list",["~$ns","^T","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.",["^19",["~:refer-clojure","~:exclude",["^Q","^P","^O","^R","^L","^N","^M"]]],["^19",["^15",["^Z","~:as","^["],["^10","^1=","^11"]]]]],"~:flags",["^ ","^15",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^13","^12","^Z","^10"]],"^W","^T","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer/api.cljc"],"~:compiled-at",1642433052660,"^U",["^ ","^Z","^Z","^[","^Z","^10","^10","^11","^10","^12","^12","^13","^13"],"~:resource-name","cljs/analyzer/api.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer.api\n  \"This is intended to be a stable api for those who need programmatic access\n  to the analyzer.\"\n  (:refer-clojure :exclude [all-ns ns-interns ns-resolve resolve find-ns\n                            ns-publics remove-ns])\n  #?(:clj  (:require [cljs.analyzer :as ana]\n                     [cljs.env :as env]\n                     [cljs.util :as util]\n                     [clojure.edn :as edn]\n                     [clojure.java.io :as io])\n     :cljs (:require [cljs.analyzer :as ana]\n                     [cljs.env :as env])))\n\n;; =============================================================================\n;; Useful Utilities\n\n(defn empty-state\n  \"Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options\"\n  ([]\n   (if-not (nil? env/*compiler*)\n     env/*compiler*\n     (env/default-compiler-env)))\n  ([opts]\n   (env/default-compiler-env opts)))\n\n(defn current-state\n  \"Return the current compiler state atom.\"\n  []\n  env/*compiler*)\n\n(defn current-file\n  \"Return the current file under analysis or compilation.\"\n  []\n  ana/*cljs-file*)\n\n(defn current-ns\n  \"Return the current ns under analysis or compilation.\"\n  []\n  ana/*cljs-ns*)\n\n(defmacro with-state\n  \"Run the body with the given compilation state Atom<Map>.\"\n  [state & body]\n  `(env/with-compiler-env ~state\n     ~@body))\n\n(defn empty-env\n  \"Creates an empty analysis environment.\"\n  []\n  (ana/empty-env))\n\n(defmacro no-warn\n  \"Disable analyzer warnings for any analysis executed in body.\"\n  [& body]\n  (let [no-warnings (zipmap (keys ana/*cljs-warnings*) (repeat false))]\n    `(binding [ana/*cljs-warnings* ~no-warnings]\n       ~@body)))\n\n(defn warning-enabled?\n  \"Test if the given warning-type is enabled.\"\n  [warning-type]\n  (ana/*cljs-warnings* warning-type))\n\n(defn default-warning-handler\n  \"The default warning handler.\n\n   Outputs the warning messages to *err*.\"\n  [warning-type env extra]\n  (ana/default-warning-handler warning-type env extra))\n\n(defmacro with-warning-handlers\n  \"Helper macro for custom handling of emitted warnings. Handlers should be\n   a vector of functions. The signature of these functions is\n   [warn-type env warn-info]. warn-type is a keyword describing the warning,\n   env is the analysis environment, and warn-info is a map of extra useful\n   information for a particular warning type.\"\n  [handlers & body]\n  `(ana/with-warning-handlers ~handlers\n     ~@body))\n\n(defn warning-message\n  \"Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers.\"\n  [warn-type warn-info]\n  (ana/error-message warn-type warn-info))\n\n(defn enabled-warnings\n  \"Get the enabled warning types.\"\n  []\n  ana/*cljs-warnings*)\n\n(defn get-options\n  \"Return the compiler options from compiler state.\"\n  ([] (get-options (current-state)))\n  ([state]\n   (get @state :options)))\n\n(defn get-js-index\n  \"Return the currently computed Google Closure js dependency index from the\n  compiler state.\"\n  ([] (get-js-index (current-state)))\n  ([state]\n   (get @state :js-dependency-index)))\n\n(def\n  ^{:doc \"ClojureScript's default analysis passes.\"}\n  default-passes ana/default-passes)\n\n(defmacro with-passes\n  \"Evaluate the body with the provided sequence of compiler passes.\"\n  [passes & body]\n  `(binding [ana/*passes* ~passes]\n     ~@body))\n\n#?(:clj\n   (defn analyze\n     \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n     (one of :statement, :expr, :return), :ns (a symbol naming the\n     compilation ns)}, and form, returns an expression object (a map\n     containing at least :form, :op and :env keys). If expr has any (immediately)\n     nested exprs, must have :children entry. This must be a vector of keywords naming\n     the immediately nested fields mapped to an expr or vector of exprs. This will\n     facilitate code walking without knowing the details of the op set.\"\n     ([env form] (analyze env form nil))\n     ([env form name] (analyze env form name nil))\n     ([env form name opts]\n      (analyze (or (current-state) (empty-state opts)) env form name opts))\n     ([state env form name opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/analyze env form name opts))))))\n\n#?(:clj\n   (defn forms-seq\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([rdr] (ana/forms-seq* rdr nil))\n     ([rdr filename] (ana/forms-seq* rdr filename))))\n\n#?(:clj\n   (defn parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n\n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src] (parse-ns src nil nil))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (parse-ns (or (current-state) (empty-state opts)) src dest opts))\n     ([state src dest opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/parse-ns src dest opts))))))\n\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n\n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f] (analyze-file f nil))\n     ([f opts]\n      (analyze-file (or (current-state) (empty-state opts)) f opts))\n     ([state f opts]\n      (env/with-compiler-env state\n        (binding [ana/*cljs-warning-handlers* (:warning-handlers opts ana/*cljs-warning-handlers*)]\n          (ana/analyze-file f opts))))))\n\n#?(:clj\n   (defn read-analysis-cache\n     \"Read an analysis cache.\"\n     [cache-file]\n     (case (util/ext cache-file)\n       \"edn\" (edn/read-string (slurp cache-file))\n       \"json\" (let [{:keys [reader read]} @ana/transit]\n                (with-open [is (io/input-stream cache-file)]\n                  (read (reader is :json ana/transit-read-opts)))))))\n\n;; =============================================================================\n;; Main API\n\n(defn resolve\n  \"Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve\"\n  [env sym]\n  {:pre [(map? env) (symbol? sym)]}\n  (try\n    (binding [ana/*private-var-access-nowarn* true]\n      (ana/resolve-var env sym\n        (ana/confirm-var-exists-throw)))\n    (catch #?(:clj Exception :cljs :default) e\n      (ana/resolve-macro-var env sym))))\n\n(defn all-ns\n  \"Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.\"\n  ([]\n   (all-ns env/*compiler*))\n  ([state]\n   (keys (get @state ::ana/namespaces))))\n\n(defn find-ns\n  \"Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.\"\n  ([sym]\n   (find-ns env/*compiler* sym))\n  ([state sym]\n   {:pre [(symbol? sym)]}\n   (get-in @state [::ana/namespaces sym])))\n\n(defn ns-interns\n  \"Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.\"\n  ([ns]\n   (ns-interns env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (merge\n     (get-in @state [::ana/namespaces ns :macros])\n     (get-in @state [::ana/namespaces ns :defs]))))\n\n(defn ns-publics\n  \"Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.\"\n  ([ns]\n   (ns-publics env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (->> (merge\n          (get-in @state [::ana/namespaces ns :macros])\n          (get-in @state [::ana/namespaces ns :defs]))\n        (remove (fn [[k v]] (:private v)))\n        (into {}))))\n\n(defn ns-resolve\n  \"Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.\"\n  ([ns sym]\n   (ns-resolve env/*compiler* ns sym))\n  ([state ns sym]\n   {:pre [(symbol? ns) (symbol? sym)]}\n   (get-in @state [::ana/namespaces ns :defs sym])))\n\n(defn remove-ns\n  \"Removes the namespace named by the symbol.\"\n  ([ns]\n   (remove-ns env/*compiler* ns))\n  ([state ns]\n   {:pre [(symbol? ns)]}\n   (swap! state update-in [::ana/namespaces] dissoc ns)))\n\n(defmacro in-cljs-user\n  \"Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body.\"\n  [env & body]\n  `(binding [cljs.analyzer/*cljs-ns* 'cljs.user]\n     (cljs.env/with-compiler-env ~env\n       ~@body)))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["var_args","G__14896","cljs.analyzer.api/empty-state","js/Error","cljs.env/*compiler*","cljs.env.default_compiler_env","opts","cljs.analyzer.api/current-state","cljs.analyzer.api/current-file","cljs.analyzer/*cljs-file*","cljs.analyzer.api/current-ns","cljs.analyzer/*cljs-ns*","cljs.analyzer.api/empty-env","cljs.analyzer/empty-env","cljs.analyzer.api/warning-enabled?","warning-type","cljs.analyzer/*cljs-warnings*","cljs.analyzer.api/default-warning-handler","env","extra","cljs.analyzer/default-warning-handler","cljs.analyzer.api/warning-message","warn-type","warn-info","cljs.analyzer/error-message","cljs.analyzer.api/enabled-warnings","G__14913","cljs.analyzer.api/get-options","cljs.analyzer.api.get_options","state","cljs.core/deref","cljs.core.get","G__14915","cljs.analyzer.api/get-js-index","cljs.analyzer.api.get_js_index","cljs.analyzer.api/default-passes","cljs.analyzer/default-passes","cljs.analyzer.api/resolve","sym","e14920","*private-var-access-nowarn*-orig-val__14921","*private-var-access-nowarn*-temp-val__14922","cljs.analyzer/*private-var-access-nowarn*","cljs.analyzer.resolve_var","cljs.analyzer/confirm-var-exists-throw","e","cljs.analyzer/resolve-macro-var","G__14924","cljs.analyzer.api/all-ns","cljs.analyzer.api.all_ns","cljs.core/keys","G__14928","cljs.analyzer.api/find-ns","cljs.analyzer.api.find_ns","cljs.core.get_in","G__14936","cljs.analyzer.api/ns-interns","ns","cljs.analyzer.api.ns_interns","cljs.core.merge","G__14946","cljs.analyzer.api/ns-publics","cljs.analyzer.api.ns_publics","cljs.core.remove","p__14951","vec__14952","cljs.core.nth","k","v","cljs.core.into","G__14962","cljs.analyzer.api/ns-resolve","cljs.analyzer.api.ns_resolve","G__14964","cljs.analyzer.api/remove-ns","cljs.analyzer.api.remove_ns","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/dissoc"]],"~:used-vars",["^K",["~$cljs.analyzer.api/empty-state","~$cljs.analyzer/resolve-var","~$cljs.analyzer.api/default-passes","~$cljs.analyzer.api/default-warning-handler","~$cljs.core/keys","~$cljs.env/default-compiler-env","~$cljs.core/deref","~$cljs.analyzer.api/current-file","~$cljs.analyzer.api/empty-env","~$cljs.analyzer.api/current-ns","~$cljs.core/dissoc","~$cljs.analyzer.api/ns-interns","~$cljs.analyzer.api/all-ns","~$cljs.env/*compiler*","~$cljs.analyzer.api/get-js-index","~$cljs.core/into","~$cljs.analyzer/*cljs-warnings*","~$cljs.analyzer/error-message","~$cljs.analyzer/default-warning-handler","~$cljs.core/get-in","~$cljs.core/swap!","~$cljs.core/get","~$cljs.analyzer.api/find-ns","~$cljs.core/remove","~$cljs.analyzer.api/resolve","~$cljs.analyzer/empty-env","~$cljs.analyzer.api/warning-message","~$cljs.analyzer/default-passes","~$cljs.analyzer.api/current-state","~$cljs.core/nth","~$cljs.analyzer.api/remove-ns","~$cljs.analyzer.api/get-options","~$cljs.analyzer.api/ns-publics","~$cljs.analyzer/resolve-macro-var","~$cljs.analyzer/confirm-var-exists-throw","~$cljs.core/not","~$cljs.analyzer.api/warning-enabled?","~$cljs.analyzer/*private-var-access-nowarn*","~$cljs.analyzer/*cljs-file*","~$cljs.analyzer.api/enabled-warnings","~$cljs.core/merge","~$cljs.analyzer/*cljs-ns*","~$cljs.core/update-in","~$cljs.analyzer.api/ns-resolve","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^1B","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^13","~$goog.dom.HtmlElement"]]],["^1B","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","~$clojure.string","~$goog.string"]]],["^1B","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","cljs/env.cljc"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12"]]],["^1B","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1B","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2["]]],["^1B","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30"]]],["^1B","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2W","~$goog.string.StringBuffer"]]],["^1B","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12"]]],["^1B","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","^38","^39","^3:","^37","^2X","^2W","^3<"]]],["^1B","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30"]]],"~:SHADOW-TIMESTAMP",[1641542032000,1641542032000,1641542029000],["^1B","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30","~$goog.reflect"]]],["^1B","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30","~$goog.fs.blob","^31","~$goog.html.SafeScript","~$goog.html.trustedtypes","^33","^34","^35","^36"]]],["^1B","cljs/analyzer/passes/and_or.cljc"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","~$cljs.analyzer.passes"]]],["^1B","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^35","~$goog.html.SafeUrl","^36","^30","^2["]]],["^1B","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3@","~$goog.html.SafeStyle","^3C","^32","~$goog.html.uncheckedconversions","^35","^2["]]],["^1B","cljs/analyzer/passes.cljc"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12"]]],["^1B","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^35","^33","^34","^3@","^3G","~$goog.html.SafeStyleSheet","^3C","~$goog.dom.TagName","^32","^36","^30","~$goog.labs.userAgent.browser","^2X","^2Y","^2[","~$goog.dom.tags","^3A"]]],["^1B","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^2Y"]]],["^1B","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","cljs/reader.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","^2Y","^3;","~$cljs.tools.reader.edn","^3<"]]],["^1B","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1B","cljs/tagged_literals.cljc"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","~$cljs.reader"]]],["^1B","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^2X","^30","~$goog.collections.maps","^2W","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1B","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",[]]],["^1B","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^2X","^2Y"]]],["^1B","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","^38","^2V","~$cljs.tools.reader.impl.inspect"]]],["^1B","clojure/string.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","^2W","^3<"]]],["^1B","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","~$goog.dom.safe","^3H","^35","^2["]]],["^1B","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","~$goog.labs.userAgent","^2["]]],["^1B","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","^39","^2W","^3<"]]],["^1B","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30","^3F","^3@","^3G","^3I","^3C","^32","^35","^2[","^33"]]],["^1B","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","^37","^38","^39"]]],["^1B","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13"]]],["^1B","cljs/core.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","~$goog.math.Long","~$goog.math.Integer","^2W","^2Y","^2X","~$goog.Uri","^3<"]]],["^1B","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^35","^36","^3A","^30"]]],["^1B","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^35","^3G","^36","^2Y","^30","^2["]]],["^1B","cljs/analyzer/api.cljc"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","^Z","^10"]]],["^1B","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^3>"]]],["^1B","clojure/set.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12"]]],["^1B","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30","^2W"]]],["^1B","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^30","^36"]]],["^1B","cljs/analyzer.cljc"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12","~$cljs.analyzer.impl","~$cljs.analyzer.passes.and-or","^10","^3P","~$cljs.tagged-literals","^3;","^38","~$clojure.set","^2V","^2W"]]],["^1B","cljs/analyzer/impl.cljc"],["78c69af9064be23a596f27f744408340fe4ca37b","^2Q",["^ ","^2R",null,"^2S",["^K",[]],"^2T",["^13","^12"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1641292453000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1641292453000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/compiler.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/source_map/base64_vlq.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1641292453000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer/impl.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer/passes/and_or.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1641292453000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1641292453000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer/passes.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1641292454000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/js_deps.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/source_map/base64.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1641292454000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/reader.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer/macros.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1641292454000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1641292454000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1641292454000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/core.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/instant.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/env.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1641292454000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1641292454000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1641292453000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/env/macros.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/tagged_literals.cljc",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/externs.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/source_map.clj",1641542029000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1641292453000,"jar:file:/C:/Users/flegmeister/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/util.cljc",1641542029000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","^7","cljs/analyzer/api.cljc","^8",9,"^9",5,"^:",9,"^;",22],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H"],"^I",null,"^J",["^K",["^L","^M","^N","^O","^P","^Q","^R"]],"^S","^T","^U",["^ "],"^X",null,"^Y",["^ ","^Z","^Z","^[","^Z","^10","^10","^11","^10","^12","^12","^13","^13"],"^14",["^K",["^15"]],"~:shadow/js-access-global",["^K",["Error"]],"^16",null,"~:defs",["^ ","^L",["^ ","~:protocol-inline",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",221,"^9",7,"^:",221,"^;",14,"~:arglists",["^19",["~$quote",["^19",[["~$sym"],["~$state","^4["]]]]],"^6","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^4["],["^50","^4["]],"^4Y",["^19",[["^4["],["^50","^4["]]],"~:arglists-meta",["^19",[null,null]]]],"^S","^28","^7","cljs/analyzer/api.cljc","^;",14,"^51",["^ ","^52",false,"^53",2,"^54",2,"^55",[["^4["],["^50","^4["]],"^4Y",["^19",[["^4["],["^50","^4["]]],"^56",["^19",[null,null]]],"^55",[["^4["],["^50","^4["]],"~:protocol-impl",null,"^53",2,"^56",["^19",[null,null]],"^9",1,"^52",false,"~:methods",[["^ ","^53",1,"^52",false,"~:tag","~$any"],["^ ","^53",2,"^52",false,"^59",["^K",[null,"^5:"]]]],"^8",221,"^:",221,"^54",2,"~:fn-var",true,"^4Y",["^19",[["^4["],["^50","^4["]]],"^6","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^M",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",263,"^9",7,"^:",263,"^;",16,"^4Y",["^19",["^4Z",["^19",[["^1:"],["^50","^1:"]]]]],"^6","Removes the namespace named by the symbol.","^51",["^ ","^52",false,"^53",2,"^54",2,"^55",[["^1:"],["^50","^1:"]],"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^56",["^19",[null,null]]]],"^S","^2@","^7","cljs/analyzer/api.cljc","^;",16,"^51",["^ ","^52",false,"^53",2,"^54",2,"^55",[["^1:"],["^50","^1:"]],"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^56",["^19",[null,null]]],"^55",[["^1:"],["^50","^1:"]],"^57",null,"^53",2,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",1,"^52",false,"^59","^5:"],["^ ","^53",2,"^52",false,"^59",["^K",[null,"^5:"]]]],"^8",263,"^:",263,"^54",2,"^5;",true,"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^6","Removes the namespace named by the symbol."],"^N",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",241,"^9",7,"^:",241,"^;",17,"^4Y",["^19",["^4Z",["^19",[["^1:"],["^50","^1:"]]]]],"^6","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^51",["^ ","^52",false,"^53",2,"^54",2,"^55",[["^1:"],["^50","^1:"]],"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^56",["^19",[null,null]]]],"^S","^2B","^7","cljs/analyzer/api.cljc","^;",17,"^51",["^ ","^52",false,"^53",2,"^54",2,"^55",[["^1:"],["^50","^1:"]],"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^56",["^19",[null,null]]],"^55",[["^1:"],["^50","^1:"]],"^57",null,"^53",2,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",1,"^52",false,"^59","^5:"],["^ ","^53",2,"^52",false,"^59",["^K",[null,"~$clj","^5:"]]]],"^8",241,"^:",241,"^54",2,"^5;",true,"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^6","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",102,"^9",7,"^:",102,"^;",18,"^4Y",["^19",["^4Z",["^19",[[],["^50"]]]]],"^6","Return the compiler options from compiler state.","^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^50"]],"^4Y",["^19",[[],["^50"]]],"^56",["^19",[null,null]]]],"^S","^2A","^7","cljs/analyzer/api.cljc","^;",18,"^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^50"]],"^4Y",["^19",[[],["^50"]]],"^56",["^19",[null,null]]],"^55",[[],["^50"]],"^57",null,"^53",1,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",0,"^52",false,"^59","^5:"],["^ ","^53",1,"^52",false,"^59",["^K",["^5:","~$clj-nil"]]]],"^8",102,"^:",102,"^54",1,"^5;",true,"^4Y",["^19",[[],["^50"]]],"^6","Return the compiler options from compiler state."],"~$warning-message",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",91,"^9",7,"^:",91,"^;",22,"^4Y",["^19",["^4Z",["^19",[["~$warn-type","~$warn-info"]]]]],"^6","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"^S","^2<","^7","cljs/analyzer/api.cljc","^;",22,"^55",["^19",[["^5@","^5A"]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",91,"~:ret-tag","^5:","^:",91,"^54",2,"^5;",true,"^4Y",["^19",["^4Z",["^19",[["^5@","^5A"]]]]],"^6","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"~$warning-enabled?",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",69,"^9",7,"^:",69,"^;",23,"^4Y",["^19",["^4Z",["^19",[["~$warning-type"]]]]],"^6","Test if the given warning-type is enabled."],"^S","^2F","^7","cljs/analyzer/api.cljc","^;",23,"^55",["^19",[["^5D"]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",69,"^5B","^5:","^:",69,"^54",1,"^5;",true,"^4Y",["^19",["^4Z",["^19",[["^5D"]]]]],"^6","Test if the given warning-type is enabled."],"~$current-state",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",36,"^9",7,"^:",36,"^;",20,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Return the current compiler state atom."],"^S","^2>","^7","cljs/analyzer/api.cljc","^;",20,"^55",["^19",[[]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",36,"^5B","^5:","^:",36,"^54",0,"^5;",true,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Return the current compiler state atom."],"^O",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",254,"^9",7,"^:",254,"^;",17,"^4Y",["^19",["^4Z",["^19",[["^1:","^4["],["^50","^1:","^4["]]]]],"^6","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^51",["^ ","^52",false,"^53",3,"^54",3,"^55",[["^1:","^4["],["^50","^1:","^4["]],"^4Y",["^19",[["^1:","^4["],["^50","^1:","^4["]]],"^56",["^19",[null,null]]]],"^S","^2M","^7","cljs/analyzer/api.cljc","^;",17,"^51",["^ ","^52",false,"^53",3,"^54",3,"^55",[["^1:","^4["],["^50","^1:","^4["]],"^4Y",["^19",[["^1:","^4["],["^50","^1:","^4["]]],"^56",["^19",[null,null]]],"^55",[["^1:","^4["],["^50","^1:","^4["]],"^57",null,"^53",3,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",2,"^52",false,"^59","^5:"],["^ ","^53",3,"^52",false,"^59",["^K",[null,"^5:"]]]],"^8",254,"^:",254,"^54",3,"^5;",true,"^4Y",["^19",[["^1:","^4["],["^50","^1:","^4["]]],"^6","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$enabled-warnings",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",97,"^9",7,"^:",97,"^;",23,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Get the enabled warning types."],"^S","^2I","^7","cljs/analyzer/api.cljc","^;",23,"^55",["^19",[[]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",97,"^5B","^5:","^:",97,"^54",0,"^5;",true,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Get the enabled warning types."],"~$empty-state",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",25,"^9",7,"^:",25,"^;",18,"^4Y",["^19",["^4Z",["^19",[[],["~$opts"]]]]],"^6","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options","^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^5H"]],"^4Y",["^19",[[],["^5H"]]],"^56",["^19",[null,null]]]],"^S","^1N","^7","cljs/analyzer/api.cljc","^;",18,"^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^5H"]],"^4Y",["^19",[[],["^5H"]]],"^56",["^19",[null,null]]],"^55",[[],["^5H"]],"^57",null,"^53",1,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",0,"^52",false,"^59","^5:"],["^ ","^53",1,"^52",false,"^59","~$cljs.core/Atom"]],"^8",25,"^:",25,"^54",1,"^5;",true,"^4Y",["^19",[[],["^5H"]]],"^6","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options"],"~$default-passes",["^ ","^5",["^ ","^7","cljs/analyzer/api.cljc","^8",117,"^9",3,"^:",117,"^;",17,"^6","ClojureScript's default analysis passes."],"^S","^1P","^7","cljs/analyzer/api.cljc","^;",17,"^9",1,"^8",115,"^:",117,"^59","~$cljs.core/IVector","^6","ClojureScript's default analysis passes."],"~$empty-env",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",57,"^9",7,"^:",57,"^;",16,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Creates an empty analysis environment."],"^S","^1V","^7","cljs/analyzer/api.cljc","^;",16,"^55",["^19",[[]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",57,"^5B","^5:","^:",57,"^54",0,"^5;",true,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",74,"^9",7,"^:",74,"^;",30,"^4Y",["^19",["^4Z",["^19",[["^5D","^11","~$extra"]]]]],"^6","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^S","^1Q","^7","cljs/analyzer/api.cljc","^;",30,"^55",["^19",[["^5D","^11","^5N"]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",74,"^5B",["^K",[null,"^5>"]],"^:",74,"^54",3,"^5;",true,"^4Y",["^19",["^4Z",["^19",[["^5D","^11","^5N"]]]]],"^6","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^P",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",230,"^9",7,"^:",230,"^;",17,"^4Y",["^19",["^4Z",["^19",[["^1:"],["^50","^1:"]]]]],"^6","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^51",["^ ","^52",false,"^53",2,"^54",2,"^55",[["^1:"],["^50","^1:"]],"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^56",["^19",[null,null]]]],"^S","^1Y","^7","cljs/analyzer/api.cljc","^;",17,"^51",["^ ","^52",false,"^53",2,"^54",2,"^55",[["^1:"],["^50","^1:"]],"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^56",["^19",[null,null]]],"^55",[["^1:"],["^50","^1:"]],"^57",null,"^53",2,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",1,"^52",false,"^59","^5:"],["^ ","^53",2,"^52",false,"^59",["^K",["^5:","^5>"]]]],"^8",230,"^:",230,"^54",2,"^5;",true,"^4Y",["^19",[["^1:"],["^50","^1:"]]],"^6","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^Q",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",213,"^9",7,"^:",213,"^;",13,"^4Y",["^19",["^4Z",["^19",[[],["^50"]]]]],"^6","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^50"]],"^4Y",["^19",[[],["^50"]]],"^56",["^19",[null,null]]]],"^S","^1Z","^7","cljs/analyzer/api.cljc","^;",13,"^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^50"]],"^4Y",["^19",[[],["^50"]]],"^56",["^19",[null,null]]],"^55",[[],["^50"]],"^57",null,"^53",1,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",0,"^52",false,"^59","^5:"],["^ ","^53",1,"^52",false,"^59",["^K",["~$cljs.core/KeySeq","^5>"]]]],"^8",213,"^:",213,"^54",1,"^5;",true,"^4Y",["^19",[[],["^50"]]],"^6","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"~$current-file",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",41,"^9",7,"^:",41,"^;",19,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Return the current file under analysis or compilation."],"^S","^1U","^7","cljs/analyzer/api.cljc","^;",19,"^55",["^19",[[]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",41,"^5B","^5:","^:",41,"^54",0,"^5;",true,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Return the current file under analysis or compilation."],"~$current-ns",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",46,"^9",7,"^:",46,"^;",17,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Return the current ns under analysis or compilation."],"^S","^1W","^7","cljs/analyzer/api.cljc","^;",17,"^55",["^19",[[]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",46,"^5B","^5:","^:",46,"^54",0,"^5;",true,"^4Y",["^19",["^4Z",["^19",[[]]]]],"^6","Return the current ns under analysis or compilation."],"^R",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",201,"^9",7,"^:",201,"^;",14,"^4Y",["^19",["^4Z",["^19",[["^11","^4["]]]]],"^6","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^S","^2:","^7","cljs/analyzer/api.cljc","^;",14,"^55",["^19",[["^11","^4["]]],"^57",null,"^56",["^19",[null,null]],"^9",1,"^52",false,"^8",201,"^:",201,"^54",2,"^5;",true,"^4Y",["^19",["^4Z",["^19",[["^11","^4["]]]]],"^6","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^4X",null,"^5",["^ ","^7","cljs/analyzer/api.cljc","^8",108,"^9",7,"^:",108,"^;",19,"^4Y",["^19",["^4Z",["^19",[[],["^50"]]]]],"^6","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^50"]],"^4Y",["^19",[[],["^50"]]],"^56",["^19",[null,null]]]],"^S","^20","^7","cljs/analyzer/api.cljc","^;",19,"^51",["^ ","^52",false,"^53",1,"^54",1,"^55",[[],["^50"]],"^4Y",["^19",[[],["^50"]]],"^56",["^19",[null,null]]],"^55",[[],["^50"]],"^57",null,"^53",1,"^56",["^19",[null,null]],"^9",1,"^52",false,"^58",[["^ ","^53",0,"^52",false,"^59","^5:"],["^ ","^53",1,"^52",false,"^59",["^K",["^5:","^5>"]]]],"^8",108,"^:",108,"^54",1,"^5;",true,"^4Y",["^19",[[],["^50"]]],"^6","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"^17",["^ ","^12","^12"],"~:cljs.analyzer/constants",["^ ","^14",["^K",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^4W","~:options"]],"~:order",["^5X","^5W","^5T","^5V","^4W","^5U"]],"^1>",["^ ","^15",["^K",[]]],"^1?",["^ "],"^1@",["^13","^12","^Z","^10"]],"^W","^T","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^2P",[["^60","~:static-fns"],true,["^60","~:shadow-tweaks"],null,["^60","~:source-map-inline"],null,["^60","~:elide-asserts"],true,["^60","~:optimize-constants"],null,["^60","^1E"],null,["^60","~:external-config"],null,["^60","~:tooling-config"],null,["^60","~:emit-constants"],null,["^60","~:load-tests"],false,["^60","~:form-size-threshold"],null,["^60","~:global-goog-object&array"],null,["^60","~:data-readers"],null,["^60","~:infer-externs"],"~:auto",["^60","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^60","~:fn-invoke-direct"],null,["^60","~:source-map"],null]]]